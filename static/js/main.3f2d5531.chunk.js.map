{"version":3,"sources":["components/App/App.module.scss","components/Filter/Filter.module.scss","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","redux/filter/filter-actions.js","redux/filter/filter-selector.js","components/Filter/Filter.js","redux/contacts/contacts-selector.js","redux/contacts/contacts-actions.js","components/App/App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store/store.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","Error","className","s","form","preventDefault","label","type","onChange","pattern","title","required","button","ContactList","contacts","handleDelete","contactItems","map","id","item","textContainer","onClick","list","changeFilter","createAction","getFilter","state","filter","Filter","dispatch","useDispatch","useSelector","getContacts","addContact","setContacts","deleteContact","App","useEffect","lsContacts","localStorage","getItem","JSON","parse","setItem","stringify","filteredContacts","toLowerCase","includes","getFilteredContacts","container","find","contact","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","payload","v4","_","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f2d5531.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2i36C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\"};","import s from './ContactForm.module.scss';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetFieldsToDefault = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error(`Unsupported text field ${name}`);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.target.name.value;\n    const number = event.target.number.value;\n\n    onSubmit(name, number);\n    resetFieldsToDefault();\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import s from './ContactList.module.scss';\nimport { PropTypes } from 'prop-types';\n\nconst ContactList = ({ contacts, handleDelete }) => {\n  const contactItems = contacts.map(({ id, name, number }) => (\n    <li key={id} className={s.item}>\n      <div className={s.textContainer}>\n        <span>\n          {name}: {number}\n        </span>\n        <button id={id} className={s.button} type=\"button\" onClick={handleDelete}>\n          Delete\n        </button>\n      </div>\n    </li>\n  ));\n\n  return <ul className={s.list}>{contactItems}</ul>;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('filter/change');\n","export const getFilter = state => state.filter;\n","import s from './Filter.module.scss';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/filter/filter-actions';\nimport { getFilter } from './../../redux/filter/filter-selector';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChange = event => {\n    const { value } = event.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","export const getContacts = state => state.contacts;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const setContacts = createAction('contacts/set');\nexport const deleteContact = createAction('contacts/delete');\n","import { useEffect } from 'react';\nimport s from './App.module.scss';\n\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from './../../redux/filter/filter-selector';\nimport { getContacts } from './../../redux/contacts/contacts-selector';\nimport { addContact, deleteContact, setContacts } from '../../redux/contacts/contacts-actions';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    const lsContacts = localStorage.getItem('contacts');\n\n    if (lsContacts) {\n      dispatch(setContacts(JSON.parse(lsContacts)));\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleDeleteContact = event => {\n    const { id } = event.target;\n    dispatch(deleteContact({ id }));\n  };\n\n  const handleAddContact = (name, number) => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in the contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n  };\n\n  const getFilteredContacts = (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleAddContact} />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList contacts={filteredContacts} handleDelete={handleDeleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, setContacts } from './contacts-actions';\nimport { v4 } from 'uuid';\n\nexport const contacts = createReducer([], {\n  [addContact]: (state, { payload }) => [\n    ...state,\n    { id: v4(), name: payload.name, number: payload.number },\n  ],\n  [setContacts]: (_, { payload }) => payload,\n  [deleteContact]: (state, { payload }) => state.filter(contact => contact.id !== payload.id),\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './filter-actions';\n\nexport const filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contacts } from '../contacts/contacts-reducer';\nimport { filter } from '../filter/filter-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts,\n    filter,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './redux/store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"label\":\"ContactForm_label__3KgVy\",\"button\":\"ContactForm_button__1007G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"textContainer\":\"ContactList_textContainer__EdsWp\",\"button\":\"ContactList_button__197mh\"};"],"sourceRoot":""}